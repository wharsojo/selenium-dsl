require 'selenium_dsl'

if ARGV.length>0
  codes = IO.read(ARGV[0])
  SeleniumDsl.parser(codes,ARGV[1,99])
else
  puts <<END
Selenium DSL 
============
> selenium-dsl <script-file>  [-mqrstv] #OR
> sd <script-file>  [-mqrstv]
-----------------------------
m: mono    --> no color
q: quit    --> close browser
r: resize  --> resize browser
s: screenshot> error, screenshot!
t: trace   --> trace call stack
v: verbose --> parsing output 

Ex:
> sd go-test -m -q -v -r:800x600 -s:error_image   
> sd go-test -mqv -r:800x600 -s:error_image   
> sd go-test -mqvr:800x600 -s:error_image   
> sd go-test -mqvsr:800x600
> sd go-test -qr:800x600
> sd go-test -q
> sd go-test

Script-Reference:
-----------------
eng: <string> [params]    --> Commands
 ex: firefox
     visit http://google.com
     *browser: (firefox | chrome | remote | phantomjs)*
cmd: <css-cmd>            --> DOM Query (DQ)
 ex: li.g[1]>a
cmd: <css-cmd>[=<value>]  --> DQ and attr value=Id0123
 ex: :input_id=Id0123       # <input name="input_id"/>
cmd: <css-cmd>[~<action>] --> DQ and action (DQA)
 ex: li.g[1]>a~click
cmd: <css-cmd>[~<action>][=~<text>] --> DQA and check node text
 ex: li.g[1]>a~text=~Home
cmd: <css-cmd>[@<attr>][=~<text>] --> DQ and check node attr
 ex: :input_id@value=~ayam

Script-BASH-for-cron-job
------------------------
#!/bin/bash
txt=`sd my-website -mqs`
if [ $? -ne 0 ]
  then
    echo "Error!!!"
    echo -e "\\r\\n $txt"   > elog.txt
    cat emsg.txt elog.txt > email.txt
    ssmtp site.monitor@gmail.com < email.txt
  else echo "OK"
fi

https://github.com/wharsojo/selenium-dsl - Enjoy!!! 
END
end